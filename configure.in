dnl Process this file with autoconf to produce a configure script.

dnl $Id: configure.in,v 1.13.2.61 2003/05/06 21:13:13 guus Exp $

AC_PREREQ(2.53)
AC_INIT(src/tincd.c)
AM_INIT_AUTOMAKE(tinc, 1.0-cvs)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl Include the macros from the m4/ directory
AM_ACLOCAL_INCLUDE(m4)

AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.11.5)

# Enable GNU extensions.
# Define this here, not in acconfig's @TOP@ section, since definitions
# in the latter don't make it into the configure-time tests.
AC_DEFINE([_GNU_SOURCE], 1, [Enable GNU extenstions])
AC_DEFINE([__USE_BSD], 1, [Enable BSD extensions])

ALL_LINGUAS="nl"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_GCC_TRADITIONAL
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_ISC_POSIX

dnl Check and set OS

#AC_CANONICAL_HOST

case $host_os in
  *linux*)
    AC_DEFINE(HAVE_LINUX, 1, [Linux])
    [ rm -f src/device.c; ln -sf linux/device.c src/device.c ]
  ;;
  *freebsd*)
    AC_DEFINE(HAVE_FREEBSD, 1, [FreeBSD])
    [ rm -f src/device.c; ln -sf freebsd/device.c src/device.c ]
  ;;
  *darwin*)
    AC_DEFINE(HAVE_DARWIN, 1, [Darwin (MacOS/X)])
    [ rm -f src/device.c; ln -sf darwin/device.c src/device.c ]
  ;;
  *solaris*)
    AC_DEFINE(HAVE_SOLARIS, 1, [Solaris/SunOS])
    [ rm -f src/device.c; ln -sf solaris/device.c src/device.c ]
  ;;
  *openbsd*)
    AC_DEFINE(HAVE_OPENBSD, 1, [OpenBSD])
    [ rm -f src/device.c; ln -sf openbsd/device.c src/device.c ]
  ;;
  *netbsd*)
    AC_DEFINE(HAVE_NETBSD, 1, [NetBSD])
    [ rm -f src/device.c; ln -sf netbsd/device.c src/device.c ]
  ;;
  *cygwin*)
    AC_DEFINE(HAVE_CYGWIN, 1, [Cygwin])
    [ rm -f src/device.c; ln -sf cygwin/device.c src/device.c ]
  ;;
  *)
    AC_MSG_ERROR("Unknown operating system.")
  ;;
esac

AC_CACHE_SAVE

if test -d /sw/include ; then
  CPPFLAGS="$CPPFLAGS -I/sw/include"
fi
if test -d /sw/lib ; then
  LIBS="$LIBS -L/sw/lib"
fi

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h inttypes.h limits.h malloc.h stdint.h strings.h syslog.h unistd.h \
	sys/file.h sys/ioctl.h sys/param.h sys/time.h netinet/in_systm.h])
AC_CHECK_HEADERS([net/ethernet.h net/if.h netinet/ip.h netinet/tcp.h], [], [],
	[#include <sys/types.h>
	 #include <sys/socket.h>
	 #ifdef HAVE_NETINET_IN_SYSTM_H
     #include <netinet/in_systm.h>
	 #endif])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

AC_CACHE_CHECK([for socklen_t], ac_cv_type_socklen_t,
[
  AC_TRY_COMPILE(
  [#include <sys/types.h>
  #include <sys/socket.h>],
  [socklen_t len = 42; return len;],
  ac_cv_type_socklen_t=yes,
  ac_cv_type_socklen_t=no)
])
if test $ac_cv_type_socklen_t = yes; then
  AC_DEFINE(HAVE_SOCKLEN_T, 1, [socklen_t available])
fi

AC_CACHE_CHECK([for struct addrinfo], ac_cv_struct_addrinfo,
[
  AC_TRY_COMPILE(
  [#include <sys/types.h>
  #include <sys/socket.h>
  #include <netdb.h>],
  [struct addrinfo ai; ai.ai_family = AF_INET; return ai.ai_family;],
  ac_cv_struct_addrinfo=yes,
  ac_cv_struct_addrinfo=no)
])
if test $ac_cv_struct_addrinfo = yes; then
  AC_DEFINE(HAVE_STRUCT_ADDRINFO, 1, [struct addrinfo available])
fi

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_ALLOCA
AC_TYPE_SIGNAL
AC_CHECK_FUNCS([asprintf daemon fcloseall flock ftime get_current_dir_name \
putenv select strdup strerror strsignal strtol unsetenv mlockall])
jm_FUNC_MALLOC
jm_FUNC_REALLOC

dnl Support for SunOS

AC_CHECK_FUNC(socket, [], [
  AC_CHECK_LIB(socket, connect)
])
AC_CHECK_FUNC(gethostbyname, [], [
  AC_CHECK_LIB(nsl, gethostbyname)
])

AC_CHECK_FUNCS([freeaddrinfo gai_strerror getaddrinfo getnameinfo])

AC_CACHE_SAVE

dnl These are defined in files in m4/
tinc_TUNTAP
tinc_OPENSSL
tinc_ZLIB
tinc_LZO

dnl Check if support for jumbograms is requested 
AC_ARG_ENABLE(jumbograms,
  [  --enable-jumbograms     enable support for jumbograms (packets up to 9000 bytes)],
  [ AC_DEFINE(ENABLE_JUMBOGRAMS, 1, [Support for jumbograms (packets up to 9000 bytes)]) ]
)

dnl Check if checkpoint tracing has to be enabled
AC_ARG_ENABLE(tracing,
  [  --enable-tracing        enable checkpoint tracing (debugging only)],
  [ AC_DEFINE(ENABLE_TRACING, 1, [Checkpoint tracing]) ]
)

AC_SUBST(INCLUDES)

AC_OUTPUT(Makefile 
src/Makefile
doc/Makefile
doc/es/Makefile
lib/Makefile
po/Makefile.in
m4/Makefile
)
