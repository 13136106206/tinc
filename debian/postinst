#! /bin/sh
# postinst script for tinc
#
# $Id: postinst,v 1.6.4.1 2000/12/05 09:04:32 zarq Exp $
#
# see: dh_installdeb(1)

TCONF="/etc/tinc"
NETSFILE="$TCONF/nets.boot"

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
	if [ ! -e /dev/.devfs ] ; then
	    devices_exist=1
	    for d in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ; do
		test -e /dev/tap$d || devices_exist=0
	    done
	    if [ $devices_exist -eq 0 ] ; then
		cd /dev && ./MAKEDEV netlink || true
	    fi
	fi

	if [ ! -e $NETSFILE ] ; then
	    echo "## This file contains all names of the networks to be started on system startup." > $NETSFILE
	fi

	if fgrep -q PublicKey `find /etc/tinc -type f` ; then
	    echo "If you are upgrading from version 1.0pre3, make sure you"
	    echo "regenerate the host keys.  For more information, refer to"
	    echo "/usr/share/doc/tinc/UPGRADING.txt."
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


